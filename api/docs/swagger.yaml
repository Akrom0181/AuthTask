definitions:
  handler.Response:
    properties:
      data: {}
      description:
        type: string
      error: {}
      status:
        type: integer
    type: object
  models.Contact:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      middle_name:
        type: string
      phone_number:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  models.CreateContact:
    properties:
      first_name:
        description: UserID      string `json:"user_id"`
        type: string
      last_name:
        type: string
      middle_name:
        type: string
      phone_number:
        type: string
    type: object
  models.CreateDevice:
    properties:
      device_info:
        type: string
    type: object
  models.CreateUser:
    properties:
      first_name:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
    type: object
  models.GetAllUsersResponse:
    properties:
      count:
        type: integer
      users:
        items:
          $ref: '#/definitions/models.User'
        type: array
    type: object
  models.Response:
    properties:
      data: {}
      description:
        type: string
      statusCode:
        type: integer
    type: object
  models.UpdateContact:
    properties:
      first_name:
        description: UserID      string `json:"user_id"`
        type: string
      last_name:
        type: string
      middle_name:
        type: string
      phone_number:
        type: string
    type: object
  models.UpdateUser:
    properties:
      first_name:
        type: string
      last_name:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        description: Contacts    []Contact `json:"contacts"`
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      phone_number:
        type: string
      updated_at:
        type: string
    type: object
  models.UserChangePhone:
    properties:
      phone_number:
        type: string
    type: object
  models.UserChangePhoneConfirm:
    properties:
      phone_number:
        type: string
      smscode:
        type: string
    type: object
  models.UserLoginPhoneConfirmRequest:
    properties:
      device_info:
        type: string
      phone_number:
        type: string
      smscode:
        type: string
    type: object
  models.UserLoginRequest:
    properties:
      phone_number:
        type: string
    type: object
  models.UserLoginResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  models.UserRegisterConfRequest:
    properties:
      otp:
        type: string
      phone_number:
        type: string
    type: object
  models.UserRegisterRequest:
    properties:
      phone_number:
        type: string
      user:
        $ref: '#/definitions/models.CreateUser'
    type: object
info:
  contact: {}
  description: This is a sample server.
  title: Swagger Example API
  version: "1.0"
paths:
  /task/api/v1/createcontact:
    post:
      consumes:
      - application/json
      description: Create a new contact
      operationId: create_contact
      parameters:
      - description: Contact
        in: body
        name: Contact
        required: true
        schema:
          $ref: '#/definitions/models.CreateContact'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created contact
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Create Contact
      tags:
      - contact
  /task/api/v1/createuser:
    post:
      consumes:
      - application/json
      description: Create a new user
      operationId: create_user
      parameters:
      - description: User
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.CreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Create User
      tags:
      - user
  /task/api/v1/deletecontact/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a contact by its ID
      operationId: delete_Contact
      parameters:
      - description: Contact ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Delete contact by ID
      tags:
      - contact
  /task/api/v1/deletedevice/{id}:
    delete:
      consumes:
      - application/json
      description: Delete device by its ID
      operationId: delete_device
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Delete device by ID
      tags:
      - device
  /task/api/v1/deleteuser/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by their ID
      operationId: delete_user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Delete User by ID
      tags:
      - user
  /task/api/v1/devicecreate:
    post:
      consumes:
      - application/json
      description: Create a new device
      operationId: create_device
      parameters:
      - description: Device
        in: body
        name: Device
        required: true
        schema:
          $ref: '#/definitions/models.CreateDevice'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created device
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Create device
      tags:
      - device
  /task/api/v1/getallcontacts:
    get:
      consumes:
      - application/json
      description: Retrieve all Contacts
      operationId: get_all_Contacts
      parameters:
      - description: Search Contacts by name or email
        in: query
        name: search
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Limit number of results per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved contacts
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "404":
          description: Contact not found
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Get all Contacts
      tags:
      - contact
  /task/api/v1/getallusers:
    get:
      consumes:
      - application/json
      description: Retrieve all users
      operationId: get_all_users
      parameters:
      - description: Search users by name or email
        in: query
        name: search
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Limit number of results per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllUsersResponse'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get All Users
      tags:
      - user
  /task/api/v1/getbyidcontact/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a contact by their ID
      operationId: get_Contact
      parameters:
      - description: Contact ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved contact
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "404":
          description: Contact not found
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Get contact by ID
      tags:
      - contact
  /task/api/v1/getbyiduser/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a user by their ID
      operationId: get_user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "404":
          description: User not found
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Get User by ID
      tags:
      - user
  /task/api/v1/getlistdevices:
    get:
      consumes:
      - application/json
      description: Retrieve all devices
      operationId: get_all_Devices
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved devices
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "404":
          description: Contact not found
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Get all devices
      tags:
      - device
  /task/api/v1/removedevice/{id}:
    delete:
      consumes:
      - application/json
      description: Remove device by its ID
      operationId: remove_device
      parameters:
      - description: Device ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Remove device by ID
      tags:
      - auth
  /task/api/v1/updatecontact/{id}:
    put:
      consumes:
      - application/json
      description: Update an existing contact
      operationId: update_contact
      parameters:
      - description: Contact ID
        in: path
        name: id
        required: true
        type: string
      - description: UpdateContactRequest
        in: body
        name: Contact
        required: true
        schema:
          $ref: '#/definitions/models.UpdateContact'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Contact'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "404":
          description: Contact not found
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Update Contact
      tags:
      - contact
  /task/api/v1/updateuser/{id}:
    put:
      consumes:
      - application/json
      description: Update an existing user
      operationId: update_user
      parameters:
      - description: UpdateUserRequest
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Update User
      tags:
      - user
  /task/api/v1/user/confirmotp:
    post:
      consumes:
      - application/json
      description: Confirm user phone_number by otp to update phone_number
      operationId: update_user_phoneNumber
      parameters:
      - description: User
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.UserChangePhoneConfirm'
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Confirm user phone_number by otp
      tags:
      - user
  /task/api/v1/user/loginconfirm:
    post:
      consumes:
      - application/json
      description: Login to the system using phone number and OTP
      parameters:
      - description: login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.UserLoginPhoneConfirmRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserLoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Customer login by phone confirmation
      tags:
      - auth
  /task/api/v1/user/loginrequest:
    post:
      consumes:
      - application/json
      description: Login to System
      parameters:
      - description: login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/models.UserLoginRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: User login requst
      tags:
      - auth
  /task/api/v1/user/logout:
    delete:
      consumes:
      - application/json
      description: Logout for user
      operationId: logout
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: Logout
      tags:
      - user
  /task/api/v1/user/registerconfirm:
    post:
      consumes:
      - application/json
      description: Registering to System
      parameters:
      - description: register
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/models.UserRegisterConfRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.UserLoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: User register confirmation
      tags:
      - auth
  /task/api/v1/user/sendcode:
    post:
      consumes:
      - application/json
      description: Registering to System
      parameters:
      - description: register
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/models.UserRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Sending otp to register
      tags:
      - auth
  /task/api/v1/user/sendotp:
    post:
      consumes:
      - application/json
      description: update user phone_number by using otp
      operationId: update_user_phone_number
      parameters:
      - description: User
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.UserChangePhone'
      produces:
      - application/json
      responses:
        "200":
          description: Success Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server error
          schema:
            allOf:
            - $ref: '#/definitions/handler.Response'
            - properties:
                data:
                  type: string
              type: object
      security:
      - BearerAuth: []
      summary: update user phone_number by otp
      tags:
      - user
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
